

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 26 16:55:53 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12F510
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=ENTRY,delta=2
     5                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=ENTRY,delta=2
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0xA,6
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 29/04/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F510 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59                           
    60                           	psect	idataBANK0
    61  02A                     __pidataBANK0:
    62                           
    63                           ;initializer for _y
    64  02A  0801               	retlw	1
    65  02B  0800               	retlw	0
    66                           
    67                           ;initializer for _clock2
    68  02C  0809               	retlw	9
    69  02D  0800               	retlw	0
    70  0001                     _TMR0	set	1
    71  0006                     _TRISGPIO	set	6
    72  0006                     _GPIO	set	6
    73                           
    74                           	psect	cinit
    75  002                     start_initialization:	
    76                           ; #config settings
    77                           
    78  002                     __initialization:
    79                           
    80                           ; Initialize objects allocated to BANK0
    81  002  04A3  092A  04A3   	fcall	__pidataBANK0	;fetch initializer
    82  005  003A               	movwf	__pdataBANK0& (0+31)
    83  006  04A3  092B  04A3   	fcall	__pidataBANK0+1	;fetch initializer
    84  009  003B               	movwf	(__pdataBANK0+1)& (0+31)
    85  00A  04A3  092C  04A3   	fcall	__pidataBANK0+2	;fetch initializer
    86  00D  003C               	movwf	(__pdataBANK0+2)& (0+31)
    87  00E  04A3  092D  04A3   	fcall	__pidataBANK0+3	;fetch initializer
    88  011  003D               	movwf	(__pdataBANK0+3)& (0+31)
    89                           
    90                           ; Clear objects allocated to BANK0
    91  012  0C10               	movlw	__pbssBANK0
    92  013  0024               	movwf	4
    93  014  0C1A               	movlw	(__pbssBANK0+10)& (0+255)
    94  015  04A3  0921  04A3   	fcall	clear_ram0
    95                           
    96                           ; Clear objects allocated to BANK1
    97  018  0C30               	movlw	__pbssBANK1
    98  019  0024               	movwf	4
    99  01A  0C34               	movlw	(__pbssBANK1+4)& (0+255)
   100  01B  04A3  0921  04A3   	fcall	clear_ram0
   101  01E                     end_of_initialization:	
   102                           ;End of C runtime variable initialization code
   103                           
   104  01E                     __end_of__initialization:
   105  01E  0064               	clrf	4
   106  01F  04A3  0B1A         	ljmp	_main	;jump to C main() function
   107                           
   108                           	psect	bssBANK0
   109  010                     __pbssBANK0:
   110  010                     _clock_out:
   111  010                     	ds	2
   112  012                     _t:
   113  012                     	ds	2
   114  014                     _x:
   115  014                     	ds	2
   116  016                     _clock3:
   117  016                     	ds	2
   118  018                     _clock:
   119  018                     	ds	2
   120                           
   121                           	psect	dataBANK0
   122  01A                     __pdataBANK0:
   123  01A                     _y:
   124  01A                     	ds	2
   125  01C                     _clock2:
   126  01C                     	ds	2
   127                           
   128                           	psect	bssBANK1
   129  030                     __pbssBANK1:
   130  030                     _clock_out_2:
   131  030                     	ds	2
   132  032                     _p:
   133  032                     	ds	2
   134                           
   135                           	psect	clrtext
   136  021                     clear_ram0:	
   137                           ;	Called with FSR containing the base address, and
   138                           ;	W with the last address+1
   139                           
   140  021  0004               	clrwdt	;clear the watchdog before getting into this loop
   141  022                     clrloop0:
   142  022  0060               	clrf	0	;clear RAM location pointed to by FSR
   143  023  02A4               	incf	4,f	;increment pointer
   144  024  0184               	xorwf	4,w	;XOR with final address
   145  025  0E1F               	andlw	31	;Test low bits only
   146  026  0643               	btfsc	3,2	;have we reached the end yet?
   147  027  0800               	retlw	0	;all done for this memory range, return
   148  028  0184               	xorwf	4,w	;XOR again to restore value
   149  029  0A22               	goto	clrloop0	;do the next byte
   150                           
   151                           	psect	cstackBANK0
   152  01E                     __pcstackBANK0:
   153  01E                     ?_main:
   154  01E                     ??_main:	
   155                           ; 1 bytes @ 0x0
   156                           
   157                           
   158                           ; 1 bytes @ 0x0
   159  01E                     	ds	1
   160                           
   161                           	psect	maintext
   162  11A                     __pmaintext:	
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 38 in file "newmain.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;		None
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1   36[None  ] void 
   175 ;; Registers used:
   176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1
   177 ;; Tracked objects:
   178 ;;		On entry : B00/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMMON   BANK0   BANK1
   182 ;;      Params:         0       0       0
   183 ;;      Locals:         0       0       0
   184 ;;      Temps:          0       1       0
   185 ;;      Totals:         0       1       0
   186 ;;Total ram usage:        1 bytes
   187 ;; This function calls:
   188 ;;		Nothing
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           
   195                           ;psect for function _main
   196  11A                     _main:
   197  11A                     l651:	
   198                           ;incstack = 0
   199                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+1]
   200                           
   201                           
   202                           ;newmain.c: 39:    GPIO = 0b00000000;
   203  11A  04A4               	bcf	4,5	;FSR5=0, select bank0
   204  11B  0066               	clrf	6	;volatile
   205  11C                     l653:
   206                           
   207                           ;newmain.c: 40:    TRISGPIO = 0b00000000;
   208  11C  0C00               	movlw	0
   209  11D  0006               	tris	6
   210  11E                     l655:
   211                           
   212                           ;newmain.c: 41:    TMR0 = 0;
   213  11E  0061               	clrf	1	;volatile
   214  11F                     l657:
   215                           
   216                           ;newmain.c: 112:         if (clock_out == 0){
   217  11F  0210               	movf	_clock_out,w
   218  120  0111               	iorwf	_clock_out+1,w
   219  121  0743               	btfss	3,2
   220  122  0B24               	goto	u121
   221  123  0B25               	goto	u120
   222  124                     u121:
   223  124  0B51               	goto	l679
   224  125                     u120:
   225  125                     l659:
   226                           
   227                           ;newmain.c: 113:               if (x >= 6){
   228  125  0C00               	movlw	0
   229  126  0095               	subwf	_x+1,w
   230  127  0C06               	movlw	6
   231  128  0643               	skipnz
   232  129  0094               	subwf	_x,w
   233  12A  0703               	skipc
   234  12B  0B2D               	goto	u131
   235  12C  0B2E               	goto	u130
   236  12D                     u131:
   237  12D  0B38               	goto	l663
   238  12E                     u130:
   239  12E                     l661:
   240                           
   241                           ;newmain.c: 114:       t++;
   242  12E  0C01               	movlw	1
   243  12F  002A               	movwf	btemp
   244  130  006B               	clrf	btemp+1
   245  131  020A               	movf	wtemp0,w
   246  132  01F2               	addwf	_t,f
   247  133  0603               	skipnc
   248  134  02B3               	incf	_t+1,f
   249  135  020B               	movf	wtemp0+1,w
   250  136  01F3               	addwf	_t+1,f
   251                           
   252                           ;newmain.c: 115:   }
   253  137  0B3A               	goto	l665
   254  138                     l663:
   255                           
   256                           ;newmain.c: 117:       y = 0;
   257  138  007A               	clrf	_y
   258  139  007B               	clrf	_y+1
   259  13A                     l665:
   260                           
   261                           ;newmain.c: 121:           GPIO = 0b00010000;
   262  13A  0C10               	movlw	16
   263  13B  0026               	movwf	6	;volatile
   264                           
   265                           ;newmain.c: 125:           GPIO = 0b00100000;
   266  13C  0C20               	movlw	32
   267  13D  0026               	movwf	6	;volatile
   268                           
   269                           ;newmain.c: 128:            _delay((unsigned long)((5)*(8000000/4000000.0)));
   270  13E  0C02               	movlw	2
   271  13F  04A4               	bcf	4,5	;FSR5=0, select bank0
   272  140  003E               	movwf	??_main
   273  141                     u227:
   274  141  02FE               	decfsz	??_main,f
   275  142  0B41               	goto	u227
   276  143  0B44               	nop2
   277                           
   278                           ;newmain.c: 130:            GPIO = 0b00010000;
   279  144  0C10               	movlw	16
   280  145  04A4               	bcf	4,5	;FSR5=0, select bank0
   281  146  0026               	movwf	6	;volatile
   282  147                     l667:
   283                           
   284                           ;newmain.c: 133:      }
   285  147  0C01               	movlw	1
   286  148  002A               	movwf	btemp
   287  149  006B               	clrf	btemp+1
   288  14A  020A               	movf	wtemp0,w
   289  14B  01FA               	addwf	_y,f
   290  14C  0603               	skipnc
   291  14D  02BB               	incf	_y+1,f
   292  14E  020B               	movf	wtemp0+1,w
   293  14F  01FB               	addwf	_y+1,f
   294  150  0B3A               	goto	l665
   295  151                     l679:
   296                           
   297                           ;newmain.c: 144:         if (clock_out == 1){
   298  151  00D0               	decf	_clock_out,w
   299  152  0111               	iorwf	_clock_out+1,w
   300  153  0743               	btfss	3,2
   301  154  0B56               	goto	u141
   302  155  0B57               	goto	u140
   303  156                     u141:
   304  156  0BA8               	goto	l705
   305  157                     u140:
   306  157  0B6E               	goto	l687
   307  158                     l683:
   308                           
   309                           ;newmain.c: 146:             GPIO = 0b00100000;
   310  158  0C20               	movlw	32
   311  159  0026               	movwf	6	;volatile
   312                           
   313                           ;newmain.c: 149:             GPIO = 0b00010000;
   314  15A  0C10               	movlw	16
   315  15B  0026               	movwf	6	;volatile
   316                           
   317                           ;newmain.c: 152:            _delay((unsigned long)((30)*(8000000/4000000.0)));
   318  15C  0C13               	movlw	19
   319  15D  04A4               	bcf	4,5	;FSR5=0, select bank0
   320  15E  003E               	movwf	??_main
   321  15F                     u237:
   322  15F  02FE               	decfsz	??_main,f
   323  160  0B5F               	goto	u237
   324  161  0000               	nop
   325                           
   326                           ;newmain.c: 153:            GPIO = 0b00100000;
   327  162  0C20               	movlw	32
   328  163  04A4               	bcf	4,5	;FSR5=0, select bank0
   329  164  0026               	movwf	6	;volatile
   330  165                     l685:
   331                           
   332                           ;newmain.c: 156:      }
   333  165  0C01               	movlw	1
   334  166  002A               	movwf	btemp
   335  167  006B               	clrf	btemp+1
   336  168  020A               	movf	wtemp0,w
   337  169  01FA               	addwf	_y,f
   338  16A  0603               	skipnc
   339  16B  02BB               	incf	_y+1,f
   340  16C  020B               	movf	wtemp0+1,w
   341  16D  01FB               	addwf	_y+1,f
   342  16E                     l687:
   343  16E  0CFF               	movlw	255
   344  16F  009B               	subwf	_y+1,w
   345  170  0CFA               	movlw	250
   346  171  0643               	skipnz
   347  172  009A               	subwf	_y,w
   348  173  0703               	skipc
   349  174  0B76               	goto	u151
   350  175  0B77               	goto	u150
   351  176                     u151:
   352  176  0B58               	goto	l683
   353  177                     u150:
   354  177                     l689:
   355                           
   356                           ;newmain.c: 157:   x ++;
   357  177  0C01               	movlw	1
   358  178  002A               	movwf	btemp
   359  179  006B               	clrf	btemp+1
   360  17A  020A               	movf	wtemp0,w
   361  17B  01F4               	addwf	_x,f
   362  17C  0603               	skipnc
   363  17D  02B5               	incf	_x+1,f
   364  17E  020B               	movf	wtemp0+1,w
   365  17F  01F5               	addwf	_x+1,f
   366  180                     l691:
   367                           
   368                           ;newmain.c: 158:   if (x >= 6){
   369  180  0C00               	movlw	0
   370  181  0095               	subwf	_x+1,w
   371  182  0C06               	movlw	6
   372  183  0643               	skipnz
   373  184  0094               	subwf	_x,w
   374  185  0703               	skipc
   375  186  0B88               	goto	u161
   376  187  0B89               	goto	u160
   377  188                     u161:
   378  188  0B93               	goto	l695
   379  189                     u160:
   380  189                     l693:
   381                           
   382                           ;newmain.c: 159:       t++;
   383  189  0C01               	movlw	1
   384  18A  002A               	movwf	btemp
   385  18B  006B               	clrf	btemp+1
   386  18C  020A               	movf	wtemp0,w
   387  18D  01F2               	addwf	_t,f
   388  18E  0603               	skipnc
   389  18F  02B3               	incf	_t+1,f
   390  190  020B               	movf	wtemp0+1,w
   391  191  01F3               	addwf	_t+1,f
   392                           
   393                           ;newmain.c: 160:   }
   394  192  0B95               	goto	l697
   395  193                     l695:
   396                           
   397                           ;newmain.c: 162:       y = 0;
   398  193  007A               	clrf	_y
   399  194  007B               	clrf	_y+1
   400  195                     l697:
   401                           
   402                           ;newmain.c: 164:          if (t >= 6){
   403  195  0C00               	movlw	0
   404  196  0093               	subwf	_t+1,w
   405  197  0C06               	movlw	6
   406  198  0643               	skipnz
   407  199  0092               	subwf	_t,w
   408  19A  0703               	skipc
   409  19B  0B9D               	goto	u171
   410  19C  0B9E               	goto	u170
   411  19D                     u171:
   412  19D  0BA8               	goto	l705
   413  19E                     u170:
   414  19E                     l699:
   415                           
   416                           ;newmain.c: 165:     y = 0;
   417  19E  007A               	clrf	_y
   418  19F  007B               	clrf	_y+1
   419                           
   420                           ;newmain.c: 166:     x = 0;
   421  1A0  0074               	clrf	_x
   422  1A1  0075               	clrf	_x+1
   423  1A2                     l701:
   424                           
   425                           ;newmain.c: 167:     clock_out = 2;
   426  1A2  0C02               	movlw	2
   427  1A3  0030               	movwf	_clock_out
   428  1A4  0C00               	movlw	0
   429  1A5  0031               	movwf	_clock_out+1
   430  1A6                     l703:
   431                           
   432                           ;newmain.c: 168:     t = 0;
   433  1A6  0072               	clrf	_t
   434  1A7  0073               	clrf	_t+1
   435  1A8                     l705:
   436                           
   437                           ;newmain.c: 172:         if (clock_out == 2){
   438  1A8  0C02               	movlw	2
   439  1A9  0190               	xorwf	_clock_out,w
   440  1AA  0111               	iorwf	_clock_out+1,w
   441  1AB  0743               	btfss	3,2
   442  1AC  0BAE               	goto	u181
   443  1AD  0BAF               	goto	u180
   444  1AE                     u181:
   445  1AE  0B1F               	goto	l657
   446  1AF                     u180:
   447  1AF  0BC5               	goto	l713
   448  1B0                     l709:
   449                           
   450                           ;newmain.c: 174:             GPIO = 0b00100000;
   451  1B0  0C20               	movlw	32
   452  1B1  0026               	movwf	6	;volatile
   453                           
   454                           ;newmain.c: 178:         GPIO = 0b00010000;
   455  1B2  0C10               	movlw	16
   456  1B3  0026               	movwf	6	;volatile
   457                           
   458                           ;newmain.c: 181:            _delay((unsigned long)((40)*(8000000/4000000.0)));
   459  1B4  0C1A               	movlw	26
   460  1B5  04A4               	bcf	4,5	;FSR5=0, select bank0
   461  1B6  003E               	movwf	??_main
   462  1B7                     u247:
   463  1B7  02FE               	decfsz	??_main,f
   464  1B8  0BB7               	goto	u247
   465                           
   466                           ;newmain.c: 182:            GPIO = 0b00100000;
   467  1B9  0C20               	movlw	32
   468  1BA  04A4               	bcf	4,5	;FSR5=0, select bank0
   469  1BB  0026               	movwf	6	;volatile
   470  1BC                     l711:
   471                           
   472                           ;newmain.c: 185:      }
   473  1BC  0C01               	movlw	1
   474  1BD  002A               	movwf	btemp
   475  1BE  006B               	clrf	btemp+1
   476  1BF  020A               	movf	wtemp0,w
   477  1C0  01FA               	addwf	_y,f
   478  1C1  0603               	skipnc
   479  1C2  02BB               	incf	_y+1,f
   480  1C3  020B               	movf	wtemp0+1,w
   481  1C4  01FB               	addwf	_y+1,f
   482  1C5                     l713:
   483  1C5  0CFF               	movlw	255
   484  1C6  009B               	subwf	_y+1,w
   485  1C7  0CFA               	movlw	250
   486  1C8  0643               	skipnz
   487  1C9  009A               	subwf	_y,w
   488  1CA  0703               	skipc
   489  1CB  0BCD               	goto	u191
   490  1CC  0BCE               	goto	u190
   491  1CD                     u191:
   492  1CD  0BB0               	goto	l709
   493  1CE                     u190:
   494  1CE                     l715:
   495                           
   496                           ;newmain.c: 186:   x ++;
   497  1CE  0C01               	movlw	1
   498  1CF  002A               	movwf	btemp
   499  1D0  006B               	clrf	btemp+1
   500  1D1  020A               	movf	wtemp0,w
   501  1D2  01F4               	addwf	_x,f
   502  1D3  0603               	skipnc
   503  1D4  02B5               	incf	_x+1,f
   504  1D5  020B               	movf	wtemp0+1,w
   505  1D6  01F5               	addwf	_x+1,f
   506  1D7                     l717:
   507                           
   508                           ;newmain.c: 187:   if (x >= 6){
   509  1D7  0C00               	movlw	0
   510  1D8  0095               	subwf	_x+1,w
   511  1D9  0C06               	movlw	6
   512  1DA  0643               	skipnz
   513  1DB  0094               	subwf	_x,w
   514  1DC  0703               	skipc
   515  1DD  0BDF               	goto	u201
   516  1DE  0BE0               	goto	u200
   517  1DF                     u201:
   518  1DF  0BEA               	goto	l721
   519  1E0                     u200:
   520  1E0                     l719:
   521                           
   522                           ;newmain.c: 188:       t++;
   523  1E0  0C01               	movlw	1
   524  1E1  002A               	movwf	btemp
   525  1E2  006B               	clrf	btemp+1
   526  1E3  020A               	movf	wtemp0,w
   527  1E4  01F2               	addwf	_t,f
   528  1E5  0603               	skipnc
   529  1E6  02B3               	incf	_t+1,f
   530  1E7  020B               	movf	wtemp0+1,w
   531  1E8  01F3               	addwf	_t+1,f
   532                           
   533                           ;newmain.c: 189:   }
   534  1E9  0BEC               	goto	l723
   535  1EA                     l721:
   536                           
   537                           ;newmain.c: 191:       y = 0;
   538  1EA  007A               	clrf	_y
   539  1EB  007B               	clrf	_y+1
   540  1EC                     l723:
   541                           
   542                           ;newmain.c: 193:          if (t >= 6){
   543  1EC  0C00               	movlw	0
   544  1ED  0093               	subwf	_t+1,w
   545  1EE  0C06               	movlw	6
   546  1EF  0643               	skipnz
   547  1F0  0092               	subwf	_t,w
   548  1F1  0703               	skipc
   549  1F2  0BF4               	goto	u211
   550  1F3  0BF5               	goto	u210
   551  1F4                     u211:
   552  1F4  0B1F               	goto	l657
   553  1F5                     u210:
   554  1F5                     l725:
   555                           
   556                           ;newmain.c: 194:     y = 0;
   557  1F5  007A               	clrf	_y
   558  1F6  007B               	clrf	_y+1
   559                           
   560                           ;newmain.c: 195:     x = 0;
   561  1F7  0074               	clrf	_x
   562  1F8  0075               	clrf	_x+1
   563                           
   564                           ;newmain.c: 196:     clock_out = 0;
   565  1F9  0070               	clrf	_clock_out
   566  1FA  0071               	clrf	_clock_out+1
   567                           
   568                           ;newmain.c: 197:     t = 0;
   569  1FB  0072               	clrf	_t
   570  1FC  0073               	clrf	_t+1
   571  1FD  0B1F               	goto	l657
   572  1FE  04A3  0A00         	ljmp	start
   573  200                     __end_of_main:
   574  000A                     btemp	set	10	;btemp
   575  000A                     wtemp0	set	10
   576  000C                     wtemp1	set	12
   577  000E                     wtemp2	set	14
   578  000A                     ttemp0	set	10
   579  000D                     ttemp1	set	13
   580  000A                     ltemp0	set	10
   581  000C                     ltemp3	set	12
   582                           
   583                           	psect	config
   584                           
   585                           ;Config register CONFIG @ 0xFFF
   586                           ;	Oscillator Select
   587                           ;	OSC = IntRC, INTOSC with 1.125 ms DRT
   588                           ;	Watchdog Timer Enable bit
   589                           ;	WDT = OFF, WDT disabled
   590                           ;	Code Protect
   591                           ;	CP = OFF, Code protection off
   592                           ;	Master Clear Enable bit
   593                           ;	MCLRE = ON, GP3/MCLR Functions as MCLR
   594                           ;	Internal Oscillator Frequency Select bit
   595                           ;	IOSCFS = ON, 8 MHz INTOSC Speed
   596  0FFF                     	org	4095
   597  0FFF  0FFA               	dw	4090

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            16      1      15
    BANK1            16      0       4

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            10      0       0       3        0.0%
BANK0               10      1       F       4       93.8%
BITBANK1            10      0       0       5        0.0%
BANK1               10      0       4       6       25.0%
ABS                  0      0      13       7        0.0%
DATA                 0      0      13       8        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 26 16:55:53 2024

                      _p 0032                        _t 0012                        _x 0014  
                      _y 001A                       fsr 0004                      l701 01A2  
                    l711 01BC                      l703 01A6                      l721 01EA  
                    l713 01C5                      l705 01A8                      l723 01EC  
                    l715 01CE                      l651 011A                      l725 01F5  
                    l717 01D7                      l709 01B0                      l661 012E  
                    l653 011C                      l719 01E0                      l663 0138  
                    l655 011E                      l665 013A                      l657 011F  
                    l691 0180                      l683 0158                      l667 0147  
                    l659 0125                      l693 0189                      l685 0165  
                    l695 0193                      l687 016E                      l679 0151  
                    l697 0195                      l689 0177                      l699 019E  
                    u200 01E0                      u120 0125                      u201 01DF  
                    u121 0124                      u210 01F5                      u130 012E  
                    u211 01F4                      u131 012D                      u140 0157  
                    u141 0156                      u150 0177                      u151 0176  
                    u160 0189                      u161 0188                      u170 019E  
                    u171 019D                      u227 0141                      u180 01AF  
                    u181 01AE                      u237 015F                      u190 01CE  
                    u191 01CD                      u247 01B7                      indf 0000  
                   _GPIO 0006                     _TMR0 0001                     _main 011A  
                   btemp 000A                     start 0000                    ?_main 001E  
                  _clock 0018                    ltemp0 000A                    ltemp3 000C  
                  ttemp0 000A                    ttemp1 000D                    status 0003  
                  wtemp0 000A                    wtemp1 000C                    wtemp2 000E  
        __initialization 0002             __end_of_main 0200                   ??_main 001E  
                 _clock2 001C                   _clock3 0016  __end_of__initialization 001E  
           __pidataBANK0 002A               __pbssBANK0 0010               __pbssBANK1 0030  
             __pmaintext 011A                  clrloop0 0022     end_of_initialization 001E  
    start_initialization 0002              __pdataBANK0 001A                ___latbits 0001  
          __pcstackBANK0 001E                _clock_out 0010              _clock_out_2 0030  
              clear_ram0 0021                 _TRISGPIO 0006            __size_of_main 00E6  
