

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu May 30 19:40:52 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12F510
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=ENTRY,delta=2
     5                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=ENTRY,delta=2
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0xA,6
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 29/04/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F510 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59                           
    60                           	psect	idataBANK0
    61  02A                     __pidataBANK0:
    62                           
    63                           ;initializer for _y
    64  02A  0801               	retlw	1
    65  02B  0800               	retlw	0
    66                           
    67                           ;initializer for _clock2
    68  02C  0809               	retlw	9
    69  02D  0800               	retlw	0
    70  0001                     _TMR0	set	1
    71  0006                     _TRISGPIO	set	6
    72  0006                     _GPIO	set	6
    73                           
    74                           	psect	cinit
    75  002                     start_initialization:	
    76                           ; #config settings
    77                           
    78  002                     __initialization:
    79                           
    80                           ; Initialize objects allocated to BANK0
    81  002  04A3  092A  04A3   	fcall	__pidataBANK0	;fetch initializer
    82  005  003A               	movwf	__pdataBANK0& (0+31)
    83  006  04A3  092B  04A3   	fcall	__pidataBANK0+1	;fetch initializer
    84  009  003B               	movwf	(__pdataBANK0+1)& (0+31)
    85  00A  04A3  092C  04A3   	fcall	__pidataBANK0+2	;fetch initializer
    86  00D  003C               	movwf	(__pdataBANK0+2)& (0+31)
    87  00E  04A3  092D  04A3   	fcall	__pidataBANK0+3	;fetch initializer
    88  011  003D               	movwf	(__pdataBANK0+3)& (0+31)
    89                           
    90                           ; Clear objects allocated to BANK0
    91  012  0C10               	movlw	__pbssBANK0
    92  013  0024               	movwf	4
    93  014  0C1A               	movlw	(__pbssBANK0+10)& (0+255)
    94  015  04A3  0921  04A3   	fcall	clear_ram0
    95                           
    96                           ; Clear objects allocated to BANK1
    97  018  0C30               	movlw	__pbssBANK1
    98  019  0024               	movwf	4
    99  01A  0C34               	movlw	(__pbssBANK1+4)& (0+255)
   100  01B  04A3  0921  04A3   	fcall	clear_ram0
   101  01E                     end_of_initialization:	
   102                           ;End of C runtime variable initialization code
   103                           
   104  01E                     __end_of__initialization:
   105  01E  0064               	clrf	4
   106  01F  04A3  0B11         	ljmp	_main	;jump to C main() function
   107                           
   108                           	psect	bssBANK0
   109  010                     __pbssBANK0:
   110  010                     _clock_out:
   111  010                     	ds	2
   112  012                     _p:
   113  012                     	ds	2
   114  014                     _x:
   115  014                     	ds	2
   116  016                     _clock3:
   117  016                     	ds	2
   118  018                     _clock:
   119  018                     	ds	2
   120                           
   121                           	psect	dataBANK0
   122  01A                     __pdataBANK0:
   123  01A                     _y:
   124  01A                     	ds	2
   125  01C                     _clock2:
   126  01C                     	ds	2
   127                           
   128                           	psect	bssBANK1
   129  030                     __pbssBANK1:
   130  030                     _clock_out_2:
   131  030                     	ds	2
   132  032                     _t:
   133  032                     	ds	2
   134                           
   135                           	psect	clrtext
   136  021                     clear_ram0:	
   137                           ;	Called with FSR containing the base address, and
   138                           ;	W with the last address+1
   139                           
   140  021  0004               	clrwdt	;clear the watchdog before getting into this loop
   141  022                     clrloop0:
   142  022  0060               	clrf	0	;clear RAM location pointed to by FSR
   143  023  02A4               	incf	4,f	;increment pointer
   144  024  0184               	xorwf	4,w	;XOR with final address
   145  025  0E1F               	andlw	31	;Test low bits only
   146  026  0643               	btfsc	3,2	;have we reached the end yet?
   147  027  0800               	retlw	0	;all done for this memory range, return
   148  028  0184               	xorwf	4,w	;XOR again to restore value
   149  029  0A22               	goto	clrloop0	;do the next byte
   150                           
   151                           	psect	cstackBANK0
   152  01E                     __pcstackBANK0:
   153  01E                     ?_main:
   154  01E                     ??_main:	
   155                           ; 1 bytes @ 0x0
   156                           
   157                           
   158                           ; 1 bytes @ 0x0
   159  01E                     	ds	1
   160                           
   161                           	psect	maintext
   162  111                     __pmaintext:	
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 38 in file "newmain.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;		None
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1   36[None  ] void 
   175 ;; Registers used:
   176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1
   177 ;; Tracked objects:
   178 ;;		On entry : B00/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMMON   BANK0   BANK1
   182 ;;      Params:         0       0       0
   183 ;;      Locals:         0       0       0
   184 ;;      Temps:          0       1       0
   185 ;;      Totals:         0       1       0
   186 ;;Total ram usage:        1 bytes
   187 ;; This function calls:
   188 ;;		Nothing
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           
   195                           ;psect for function _main
   196  111                     _main:
   197  111                     l680:	
   198                           ;incstack = 0
   199                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+1]
   200                           
   201                           
   202                           ;newmain.c: 39:    GPIO = 0b00000000;
   203  111  04A4               	bcf	4,5	;FSR5=0, select bank0
   204  112  0066               	clrf	6	;volatile
   205  113                     l682:
   206                           
   207                           ;newmain.c: 40:    TRISGPIO = 0b00000000;
   208  113  0C00               	movlw	0
   209  114  0006               	tris	6
   210  115                     l684:
   211                           
   212                           ;newmain.c: 41:    TMR0 = 0;
   213  115  0061               	clrf	1	;volatile
   214  116  0B35               	goto	l700
   215  117                     l686:
   216                           
   217                           ;newmain.c: 111:       x ++;
   218  117  0C01               	movlw	1
   219  118  002A               	movwf	btemp
   220  119  006B               	clrf	btemp+1
   221  11A  020A               	movf	wtemp0,w
   222  11B  01F4               	addwf	_x,f
   223  11C  0603               	skipnc
   224  11D  02B5               	incf	_x+1,f
   225  11E  020B               	movf	wtemp0+1,w
   226  11F  01F5               	addwf	_x+1,f
   227  120                     l688:
   228                           
   229                           ;newmain.c: 112:       GPIO = 0b00100000;
   230  120  0C20               	movlw	32
   231  121  0026               	movwf	6	;volatile
   232  122                     l690:
   233                           
   234                           ;newmain.c: 113:       GPIO = 0b00010000;
   235  122  0C10               	movlw	16
   236  123  0026               	movwf	6	;volatile
   237  124                     l692:
   238                           
   239                           ;newmain.c: 114:       _delay((unsigned long)((1)*(8000000/4000000.0)));
   240  124  0B25               	nop2	;2 cycle nop
   241  125                     l694:
   242                           
   243                           ;newmain.c: 115:       GPIO = 0b00100000;
   244  125  0C20               	movlw	32
   245  126  04A4               	bcf	4,5	;FSR5=0, select bank0
   246  127  0026               	movwf	6	;volatile
   247  128                     l696:
   248                           
   249                           ;newmain.c: 116:        if (x >= 65500) {
   250  128  0CFF               	movlw	255
   251  129  0095               	subwf	_x+1,w
   252  12A  0CDC               	movlw	220
   253  12B  0643               	skipnz
   254  12C  0094               	subwf	_x,w
   255  12D  0703               	skipc
   256  12E  0B30               	goto	u141
   257  12F  0B31               	goto	u140
   258  130                     u141:
   259  130  0B35               	goto	l700
   260  131                     u140:
   261  131                     l698:
   262                           
   263                           ;newmain.c: 117:             clock_out = 1;
   264  131  0C01               	movlw	1
   265  132  0030               	movwf	_clock_out
   266  133  0C00               	movlw	0
   267  134  0031               	movwf	_clock_out+1
   268  135                     l700:
   269                           
   270                           ;newmain.c: 110:        while (clock_out == 0){
   271  135  0210               	movf	_clock_out,w
   272  136  0111               	iorwf	_clock_out+1,w
   273  137  0643               	btfsc	3,2
   274  138  0B3A               	goto	u151
   275  139  0B3B               	goto	u150
   276  13A                     u151:
   277  13A  0B17               	goto	l686
   278  13B                     u150:
   279  13B  0B5A               	goto	l716
   280  13C                     l702:
   281                           
   282                           ;newmain.c: 122:       x --;
   283  13C  0C01               	movlw	1
   284  13D  002A               	movwf	btemp
   285  13E  006B               	clrf	btemp+1
   286  13F  020A               	movf	wtemp0,w
   287  140  00B4               	subwf	_x,f
   288  141  020B               	movf	wtemp0+1,w
   289  142  0703               	skipc
   290  143  00F5               	decf	_x+1,f
   291  144  00B5               	subwf	_x+1,f
   292  145                     l704:
   293                           
   294                           ;newmain.c: 123:       GPIO = 0b00100000;
   295  145  0C20               	movlw	32
   296  146  0026               	movwf	6	;volatile
   297  147                     l706:
   298                           
   299                           ;newmain.c: 124:       GPIO = 0b00010000;
   300  147  0C10               	movlw	16
   301  148  0026               	movwf	6	;volatile
   302  149                     l708:
   303                           
   304                           ;newmain.c: 125:       _delay((unsigned long)((4)*(8000000/4000000.0)));
   305  149  0B4A               	nop2	;2 cycle nop
   306  14A  0B4B               	nop2	;2 cycle nop
   307  14B  0B4C               	nop2	;2 cycle nop
   308  14C  0B4D               	nop2	;2 cycle nop
   309  14D                     l710:
   310                           
   311                           ;newmain.c: 126:       GPIO = 0b00100000;
   312  14D  0C20               	movlw	32
   313  14E  04A4               	bcf	4,5	;FSR5=0, select bank0
   314  14F  0026               	movwf	6	;volatile
   315  150                     l712:
   316                           
   317                           ;newmain.c: 127:        if (x == 0) {
   318  150  0214               	movf	_x,w
   319  151  0115               	iorwf	_x+1,w
   320  152  0743               	btfss	3,2
   321  153  0B55               	goto	u161
   322  154  0B56               	goto	u160
   323  155                     u161:
   324  155  0B5A               	goto	l716
   325  156                     u160:
   326  156                     l714:
   327                           
   328                           ;newmain.c: 128:             clock_out = 2;
   329  156  0C02               	movlw	2
   330  157  0030               	movwf	_clock_out
   331  158  0C00               	movlw	0
   332  159  0031               	movwf	_clock_out+1
   333  15A                     l716:
   334                           
   335                           ;newmain.c: 121:        while (clock_out == 1){
   336  15A  00D0               	decf	_clock_out,w
   337  15B  0111               	iorwf	_clock_out+1,w
   338  15C  0643               	btfsc	3,2
   339  15D  0B5F               	goto	u171
   340  15E  0B60               	goto	u170
   341  15F                     u171:
   342  15F  0B3C               	goto	l702
   343  160                     u170:
   344  160  0B81               	goto	l732
   345  161                     l718:
   346                           
   347                           ;newmain.c: 133:       x --;
   348  161  0C01               	movlw	1
   349  162  002A               	movwf	btemp
   350  163  006B               	clrf	btemp+1
   351  164  020A               	movf	wtemp0,w
   352  165  00B4               	subwf	_x,f
   353  166  020B               	movf	wtemp0+1,w
   354  167  0703               	skipc
   355  168  00F5               	decf	_x+1,f
   356  169  00B5               	subwf	_x+1,f
   357  16A                     l720:
   358                           
   359                           ;newmain.c: 134:       GPIO = 0b00100000;
   360  16A  0C20               	movlw	32
   361  16B  0026               	movwf	6	;volatile
   362  16C                     l722:
   363                           
   364                           ;newmain.c: 135:       GPIO = 0b00010000;
   365  16C  0C10               	movlw	16
   366  16D  0026               	movwf	6	;volatile
   367  16E                     l724:
   368                           
   369                           ;newmain.c: 136:       _delay((unsigned long)((8)*(8000000/4000000.0)));
   370  16E  0C04               	movlw	4
   371  16F  04A4               	bcf	4,5	;FSR5=0, select bank0
   372  170  003E               	movwf	??_main
   373  171                     u267:
   374  171  02FE               	decfsz	??_main,f
   375  172  0B71               	goto	u267
   376  173  0B74               	nop2
   377  174                     l726:
   378                           
   379                           ;newmain.c: 137:       GPIO = 0b00100000;
   380  174  0C20               	movlw	32
   381  175  04A4               	bcf	4,5	;FSR5=0, select bank0
   382  176  0026               	movwf	6	;volatile
   383  177                     l728:
   384                           
   385                           ;newmain.c: 138:        if (x == 0) {
   386  177  0214               	movf	_x,w
   387  178  0115               	iorwf	_x+1,w
   388  179  0743               	btfss	3,2
   389  17A  0B7C               	goto	u181
   390  17B  0B7D               	goto	u180
   391  17C                     u181:
   392  17C  0B81               	goto	l732
   393  17D                     u180:
   394  17D                     l730:
   395                           
   396                           ;newmain.c: 139:             clock_out = 3;
   397  17D  0C03               	movlw	3
   398  17E  0030               	movwf	_clock_out
   399  17F  0C00               	movlw	0
   400  180  0031               	movwf	_clock_out+1
   401  181                     l732:
   402                           
   403                           ;newmain.c: 132:        while (clock_out == 2){
   404  181  0C02               	movlw	2
   405  182  0190               	xorwf	_clock_out,w
   406  183  0111               	iorwf	_clock_out+1,w
   407  184  0643               	btfsc	3,2
   408  185  0B87               	goto	u191
   409  186  0B88               	goto	u190
   410  187                     u191:
   411  187  0B61               	goto	l718
   412  188                     u190:
   413  188  0BA9               	goto	l748
   414  189                     l734:
   415                           
   416                           ;newmain.c: 144:       x --;
   417  189  0C01               	movlw	1
   418  18A  002A               	movwf	btemp
   419  18B  006B               	clrf	btemp+1
   420  18C  020A               	movf	wtemp0,w
   421  18D  00B4               	subwf	_x,f
   422  18E  020B               	movf	wtemp0+1,w
   423  18F  0703               	skipc
   424  190  00F5               	decf	_x+1,f
   425  191  00B5               	subwf	_x+1,f
   426  192                     l736:
   427                           
   428                           ;newmain.c: 145:       GPIO = 0b00100000;
   429  192  0C20               	movlw	32
   430  193  0026               	movwf	6	;volatile
   431  194                     l738:
   432                           
   433                           ;newmain.c: 146:       GPIO = 0b00010000;
   434  194  0C10               	movlw	16
   435  195  0026               	movwf	6	;volatile
   436  196                     l740:
   437                           
   438                           ;newmain.c: 147:       _delay((unsigned long)((12)*(8000000/4000000.0)));
   439  196  0C07               	movlw	7
   440  197  04A4               	bcf	4,5	;FSR5=0, select bank0
   441  198  003E               	movwf	??_main
   442  199                     u277:
   443  199  02FE               	decfsz	??_main,f
   444  19A  0B99               	goto	u277
   445  19B  0000               	nop
   446  19C                     l742:
   447                           
   448                           ;newmain.c: 148:       GPIO = 0b00100000;
   449  19C  0C20               	movlw	32
   450  19D  04A4               	bcf	4,5	;FSR5=0, select bank0
   451  19E  0026               	movwf	6	;volatile
   452  19F                     l744:
   453                           
   454                           ;newmain.c: 149:        if (x == 0) {
   455  19F  0214               	movf	_x,w
   456  1A0  0115               	iorwf	_x+1,w
   457  1A1  0743               	btfss	3,2
   458  1A2  0BA4               	goto	u201
   459  1A3  0BA5               	goto	u200
   460  1A4                     u201:
   461  1A4  0BA9               	goto	l748
   462  1A5                     u200:
   463  1A5                     l746:
   464                           
   465                           ;newmain.c: 150:             clock_out = 4;
   466  1A5  0C04               	movlw	4
   467  1A6  0030               	movwf	_clock_out
   468  1A7  0C00               	movlw	0
   469  1A8  0031               	movwf	_clock_out+1
   470  1A9                     l748:
   471                           
   472                           ;newmain.c: 143:        while (clock_out == 3){
   473  1A9  0C03               	movlw	3
   474  1AA  0190               	xorwf	_clock_out,w
   475  1AB  0111               	iorwf	_clock_out+1,w
   476  1AC  0643               	btfsc	3,2
   477  1AD  0BAF               	goto	u211
   478  1AE  0BB0               	goto	u210
   479  1AF                     u211:
   480  1AF  0B89               	goto	l734
   481  1B0                     u210:
   482  1B0  0BD1               	goto	l764
   483  1B1                     l750:
   484                           
   485                           ;newmain.c: 155:       x --;
   486  1B1  0C01               	movlw	1
   487  1B2  002A               	movwf	btemp
   488  1B3  006B               	clrf	btemp+1
   489  1B4  020A               	movf	wtemp0,w
   490  1B5  00B4               	subwf	_x,f
   491  1B6  020B               	movf	wtemp0+1,w
   492  1B7  0703               	skipc
   493  1B8  00F5               	decf	_x+1,f
   494  1B9  00B5               	subwf	_x+1,f
   495  1BA                     l752:
   496                           
   497                           ;newmain.c: 156:       GPIO = 0b00100000;
   498  1BA  0C20               	movlw	32
   499  1BB  0026               	movwf	6	;volatile
   500  1BC                     l754:
   501                           
   502                           ;newmain.c: 157:       GPIO = 0b00010000;
   503  1BC  0C10               	movlw	16
   504  1BD  0026               	movwf	6	;volatile
   505  1BE                     l756:
   506                           
   507                           ;newmain.c: 158:       _delay((unsigned long)((50)*(8000000/4000000.0)));
   508  1BE  0C20               	movlw	32
   509  1BF  04A4               	bcf	4,5	;FSR5=0, select bank0
   510  1C0  003E               	movwf	??_main
   511  1C1                     u287:
   512  1C1  02FE               	decfsz	??_main,f
   513  1C2  0BC1               	goto	u287
   514  1C3  0BC4               	nop2
   515  1C4                     l758:
   516                           
   517                           ;newmain.c: 159:       GPIO = 0b00100000;
   518  1C4  0C20               	movlw	32
   519  1C5  04A4               	bcf	4,5	;FSR5=0, select bank0
   520  1C6  0026               	movwf	6	;volatile
   521  1C7                     l760:
   522                           
   523                           ;newmain.c: 160:        if (x == 0) {
   524  1C7  0214               	movf	_x,w
   525  1C8  0115               	iorwf	_x+1,w
   526  1C9  0743               	btfss	3,2
   527  1CA  0BCC               	goto	u221
   528  1CB  0BCD               	goto	u220
   529  1CC                     u221:
   530  1CC  0BD1               	goto	l764
   531  1CD                     u220:
   532  1CD                     l762:
   533                           
   534                           ;newmain.c: 161:             clock_out = 5;
   535  1CD  0C05               	movlw	5
   536  1CE  0030               	movwf	_clock_out
   537  1CF  0C00               	movlw	0
   538  1D0  0031               	movwf	_clock_out+1
   539  1D1                     l764:
   540                           
   541                           ;newmain.c: 154:        while (clock_out == 4){
   542  1D1  0C04               	movlw	4
   543  1D2  0190               	xorwf	_clock_out,w
   544  1D3  0111               	iorwf	_clock_out+1,w
   545  1D4  0643               	btfsc	3,2
   546  1D5  0BD7               	goto	u231
   547  1D6  0BD8               	goto	u230
   548  1D7                     u231:
   549  1D7  0BB1               	goto	l750
   550  1D8                     u230:
   551  1D8  0BF6               	goto	l780
   552  1D9                     l766:
   553                           
   554                           ;newmain.c: 166:       x --;
   555  1D9  0C01               	movlw	1
   556  1DA  002A               	movwf	btemp
   557  1DB  006B               	clrf	btemp+1
   558  1DC  020A               	movf	wtemp0,w
   559  1DD  00B4               	subwf	_x,f
   560  1DE  020B               	movf	wtemp0+1,w
   561  1DF  0703               	skipc
   562  1E0  00F5               	decf	_x+1,f
   563  1E1  00B5               	subwf	_x+1,f
   564  1E2                     l768:
   565                           
   566                           ;newmain.c: 167:       GPIO = 0b00100000;
   567  1E2  0C20               	movlw	32
   568  1E3  0026               	movwf	6	;volatile
   569  1E4                     l770:
   570                           
   571                           ;newmain.c: 168:       GPIO = 0b00010000;
   572  1E4  0C10               	movlw	16
   573  1E5  0026               	movwf	6	;volatile
   574  1E6                     l772:
   575                           
   576                           ;newmain.c: 169:       _delay((unsigned long)((40)*(8000000/4000000.0)));
   577  1E6  0C1A               	movlw	26
   578  1E7  04A4               	bcf	4,5	;FSR5=0, select bank0
   579  1E8  003E               	movwf	??_main
   580  1E9                     u297:
   581  1E9  02FE               	decfsz	??_main,f
   582  1EA  0BE9               	goto	u297
   583  1EB                     l774:
   584                           
   585                           ;newmain.c: 170:       GPIO = 0b00100000;
   586  1EB  0C20               	movlw	32
   587  1EC  04A4               	bcf	4,5	;FSR5=0, select bank0
   588  1ED  0026               	movwf	6	;volatile
   589  1EE                     l776:
   590                           
   591                           ;newmain.c: 171:        if (x == 0) {
   592  1EE  0214               	movf	_x,w
   593  1EF  0115               	iorwf	_x+1,w
   594  1F0  0743               	btfss	3,2
   595  1F1  0BF3               	goto	u241
   596  1F2  0BF4               	goto	u240
   597  1F3                     u241:
   598  1F3  0BF6               	goto	l780
   599  1F4                     u240:
   600  1F4                     l778:
   601                           
   602                           ;newmain.c: 172:             clock_out = 0;
   603  1F4  0070               	clrf	_clock_out
   604  1F5  0071               	clrf	_clock_out+1
   605  1F6                     l780:
   606                           
   607                           ;newmain.c: 165:        while (clock_out == 5){
   608  1F6  0C05               	movlw	5
   609  1F7  0190               	xorwf	_clock_out,w
   610  1F8  0111               	iorwf	_clock_out+1,w
   611  1F9  0643               	btfsc	3,2
   612  1FA  0BFC               	goto	u251
   613  1FB  0BFD               	goto	u250
   614  1FC                     u251:
   615  1FC  0BD9               	goto	l766
   616  1FD                     u250:
   617  1FD  0B35               	goto	l700
   618  1FE  04A3  0A00         	ljmp	start
   619  200                     __end_of_main:
   620  000A                     btemp	set	10	;btemp
   621  000A                     wtemp0	set	10
   622  000C                     wtemp1	set	12
   623  000E                     wtemp2	set	14
   624  000A                     ttemp0	set	10
   625  000D                     ttemp1	set	13
   626  000A                     ltemp0	set	10
   627  000C                     ltemp3	set	12
   628                           
   629                           	psect	config
   630                           
   631                           ;Config register CONFIG @ 0xFFF
   632                           ;	Oscillator Select
   633                           ;	OSC = IntRC, INTOSC with 1.125 ms DRT
   634                           ;	Watchdog Timer Enable bit
   635                           ;	WDT = OFF, WDT disabled
   636                           ;	Code Protect
   637                           ;	CP = OFF, Code protection off
   638                           ;	Master Clear Enable bit
   639                           ;	MCLRE = ON, GP3/MCLR Functions as MCLR
   640                           ;	Internal Oscillator Frequency Select bit
   641                           ;	IOSCFS = ON, 8 MHz INTOSC Speed
   642  0FFF                     	org	4095
   643  0FFF  0FFA               	dw	4090

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            16      1      15
    BANK1            16      0       4

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            10      0       0       3        0.0%
BANK0               10      1       F       4       93.8%
BITBANK1            10      0       0       5        0.0%
BANK1               10      0       4       6       25.0%
ABS                  0      0      13       7        0.0%
DATA                 0      0      13       8        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu May 30 19:40:52 2024

                      _p 0012                        _t 0032                        _x 0014  
                      _y 001A                       fsr 0004                      l700 0135  
                    l710 014D                      l702 013C                      l720 016A  
                    l712 0150                      l704 0145                      l730 017D  
                    l722 016C                      l714 0156                      l706 0147  
                    l740 0196                      l724 016E                      l732 0181  
                    l708 0149                      l716 015A                      l750 01B1  
                    l742 019C                      l734 0189                      l726 0174  
                    l718 0161                      l760 01C7                      l752 01BA  
                    l744 019F                      l736 0192                      l728 0177  
                    l680 0111                      l770 01E4                      l762 01CD  
                    l754 01BC                      l746 01A5                      l738 0194  
                    l690 0122                      l682 0113                      l772 01E6  
                    l780 01F6                      l756 01BE                      l764 01D1  
                    l748 01A9                      l692 0124                      l684 0115  
                    l774 01EB                      l766 01D9                      l758 01C4  
                    l694 0125                      l686 0117                      l776 01EE  
                    l768 01E2                      l696 0128                      l688 0120  
                    l778 01F4                      l698 0131                      u200 01A5  
                    u201 01A4                      u210 01B0                      u211 01AF  
                    u220 01CD                      u140 0131                      u221 01CC  
                    u141 0130                      u230 01D8                      u150 013B  
                    u231 01D7                      u151 013A                      u240 01F4  
                    u160 0156                      u241 01F3                      u161 0155  
                    u250 01FD                      u170 0160                      u251 01FC  
                    u171 015F                      u180 017D                      u181 017C  
                    u190 0188                      u191 0187                      u267 0171  
                    u277 0199                      u287 01C1                      u297 01E9  
                    indf 0000                     _GPIO 0006                     _TMR0 0001  
                   _main 0111                     btemp 000A                     start 0000  
                  ?_main 001E                    _clock 0018                    ltemp0 000A  
                  ltemp3 000C                    ttemp0 000A                    ttemp1 000D  
                  status 0003                    wtemp0 000A                    wtemp1 000C  
                  wtemp2 000E          __initialization 0002             __end_of_main 0200  
                 ??_main 001E                   _clock2 001C                   _clock3 0016  
__end_of__initialization 001E             __pidataBANK0 002A               __pbssBANK0 0010  
             __pbssBANK1 0030               __pmaintext 0111                  clrloop0 0022  
   end_of_initialization 001E      start_initialization 0002              __pdataBANK0 001A  
              ___latbits 0001            __pcstackBANK0 001E                _clock_out 0010  
            _clock_out_2 0030                clear_ram0 0021                 _TRISGPIO 0006  
          __size_of_main 00EF  
