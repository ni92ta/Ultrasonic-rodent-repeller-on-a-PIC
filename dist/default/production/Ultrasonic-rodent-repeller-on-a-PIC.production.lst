

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 02 20:04:22 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12F510
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=ENTRY,delta=2
     5                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=ENTRY,delta=2
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0xA,6
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 29/04/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F510 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59                           
    60                           	psect	idataBANK0
    61  02A                     __pidataBANK0:
    62                           
    63                           ;initializer for _y
    64  02A  0801               	retlw	1
    65  02B  0800               	retlw	0
    66                           
    67                           ;initializer for _clock2
    68  02C  0809               	retlw	9
    69  02D  0800               	retlw	0
    70  0001                     _TMR0	set	1
    71  0006                     _TRISGPIO	set	6
    72  0006                     _GPIO	set	6
    73                           
    74                           	psect	cinit
    75  002                     start_initialization:	
    76                           ; #config settings
    77                           
    78  002                     __initialization:
    79                           
    80                           ; Initialize objects allocated to BANK0
    81  002  04A3  092A  04A3   	fcall	__pidataBANK0	;fetch initializer
    82  005  003A               	movwf	__pdataBANK0& (0+31)
    83  006  04A3  092B  04A3   	fcall	__pidataBANK0+1	;fetch initializer
    84  009  003B               	movwf	(__pdataBANK0+1)& (0+31)
    85  00A  04A3  092C  04A3   	fcall	__pidataBANK0+2	;fetch initializer
    86  00D  003C               	movwf	(__pdataBANK0+2)& (0+31)
    87  00E  04A3  092D  04A3   	fcall	__pidataBANK0+3	;fetch initializer
    88  011  003D               	movwf	(__pdataBANK0+3)& (0+31)
    89                           
    90                           ; Clear objects allocated to BANK0
    91  012  0C10               	movlw	__pbssBANK0
    92  013  0024               	movwf	4
    93  014  0C1A               	movlw	(__pbssBANK0+10)& (0+255)
    94  015  04A3  0921  04A3   	fcall	clear_ram0
    95                           
    96                           ; Clear objects allocated to BANK1
    97  018  0C30               	movlw	__pbssBANK1
    98  019  0024               	movwf	4
    99  01A  0C34               	movlw	(__pbssBANK1+4)& (0+255)
   100  01B  04A3  0921  04A3   	fcall	clear_ram0
   101  01E                     end_of_initialization:	
   102                           ;End of C runtime variable initialization code
   103                           
   104  01E                     __end_of__initialization:
   105  01E  0064               	clrf	4
   106  01F  04A3  0B11         	ljmp	_main	;jump to C main() function
   107                           
   108                           	psect	bssBANK0
   109  010                     __pbssBANK0:
   110  010                     _clock_out:
   111  010                     	ds	2
   112  012                     _p:
   113  012                     	ds	2
   114  014                     _x:
   115  014                     	ds	2
   116  016                     _clock3:
   117  016                     	ds	2
   118  018                     _clock:
   119  018                     	ds	2
   120                           
   121                           	psect	dataBANK0
   122  01A                     __pdataBANK0:
   123  01A                     _y:
   124  01A                     	ds	2
   125  01C                     _clock2:
   126  01C                     	ds	2
   127                           
   128                           	psect	bssBANK1
   129  030                     __pbssBANK1:
   130  030                     _clock_out_2:
   131  030                     	ds	2
   132  032                     _t:
   133  032                     	ds	2
   134                           
   135                           	psect	clrtext
   136  021                     clear_ram0:	
   137                           ;	Called with FSR containing the base address, and
   138                           ;	W with the last address+1
   139                           
   140  021  0004               	clrwdt	;clear the watchdog before getting into this loop
   141  022                     clrloop0:
   142  022  0060               	clrf	0	;clear RAM location pointed to by FSR
   143  023  02A4               	incf	4,f	;increment pointer
   144  024  0184               	xorwf	4,w	;XOR with final address
   145  025  0E1F               	andlw	31	;Test low bits only
   146  026  0643               	btfsc	3,2	;have we reached the end yet?
   147  027  0800               	retlw	0	;all done for this memory range, return
   148  028  0184               	xorwf	4,w	;XOR again to restore value
   149  029  0A22               	goto	clrloop0	;do the next byte
   150                           
   151                           	psect	cstackBANK0
   152  01E                     __pcstackBANK0:
   153  01E                     ?_main:
   154  01E                     ??_main:	
   155                           ; 1 bytes @ 0x0
   156                           
   157                           
   158                           ; 1 bytes @ 0x0
   159  01E                     	ds	1
   160                           
   161                           	psect	maintext
   162  111                     __pmaintext:	
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 38 in file "newmain.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;		None
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1   36[None  ] void 
   175 ;; Registers used:
   176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1
   177 ;; Tracked objects:
   178 ;;		On entry : B00/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMMON   BANK0   BANK1
   182 ;;      Params:         0       0       0
   183 ;;      Locals:         0       0       0
   184 ;;      Temps:          0       1       0
   185 ;;      Totals:         0       1       0
   186 ;;Total ram usage:        1 bytes
   187 ;; This function calls:
   188 ;;		Nothing
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           
   195                           ;psect for function _main
   196  111                     _main:
   197  111                     l680:	
   198                           ;incstack = 0
   199                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+1]
   200                           
   201                           
   202                           ;newmain.c: 39:    GPIO = 0b00000000;
   203  111  04A4               	bcf	4,5	;FSR5=0, select bank0
   204  112  0066               	clrf	6	;volatile
   205  113                     l682:
   206                           
   207                           ;newmain.c: 40:    TRISGPIO = 0b00000000;
   208  113  0C00               	movlw	0
   209  114  0006               	tris	6
   210  115                     l684:
   211                           
   212                           ;newmain.c: 41:    TMR0 = 0;
   213  115  0061               	clrf	1	;volatile
   214  116  0B35               	goto	l700
   215  117                     l686:
   216                           
   217                           ;newmain.c: 111:       x ++;
   218  117  0C01               	movlw	1
   219  118  002A               	movwf	btemp
   220  119  006B               	clrf	btemp+1
   221  11A  020A               	movf	wtemp0,w
   222  11B  01F4               	addwf	_x,f
   223  11C  0603               	skipnc
   224  11D  02B5               	incf	_x+1,f
   225  11E  020B               	movf	wtemp0+1,w
   226  11F  01F5               	addwf	_x+1,f
   227  120                     l688:
   228                           
   229                           ;newmain.c: 112:       GPIO = 0b00100000;
   230  120  0C20               	movlw	32
   231  121  0026               	movwf	6	;volatile
   232  122                     l690:
   233                           
   234                           ;newmain.c: 113:       GPIO = 0b00010000;
   235  122  0C10               	movlw	16
   236  123  0026               	movwf	6	;volatile
   237  124                     l692:
   238                           
   239                           ;newmain.c: 114:       _delay((unsigned long)((1)*(8000000/4000000.0)));
   240  124  0B25               	nop2	;2 cycle nop
   241  125                     l694:
   242                           
   243                           ;newmain.c: 115:       GPIO = 0b00100000;
   244  125  0C20               	movlw	32
   245  126  04A4               	bcf	4,5	;FSR5=0, select bank0
   246  127  0026               	movwf	6	;volatile
   247  128                     l696:
   248                           
   249                           ;newmain.c: 116:        if (x >= 65500) {
   250  128  0CFF               	movlw	255
   251  129  0095               	subwf	_x+1,w
   252  12A  0CDC               	movlw	220
   253  12B  0643               	skipnz
   254  12C  0094               	subwf	_x,w
   255  12D  0703               	skipc
   256  12E  0B30               	goto	u141
   257  12F  0B31               	goto	u140
   258  130                     u141:
   259  130  0B35               	goto	l700
   260  131                     u140:
   261  131                     l698:
   262                           
   263                           ;newmain.c: 117:             clock_out = 1;
   264  131  0C01               	movlw	1
   265  132  0030               	movwf	_clock_out
   266  133  0C00               	movlw	0
   267  134  0031               	movwf	_clock_out+1
   268  135                     l700:
   269                           
   270                           ;newmain.c: 110:        while (clock_out == 0){
   271  135  0210               	movf	_clock_out,w
   272  136  0111               	iorwf	_clock_out+1,w
   273  137  0643               	btfsc	3,2
   274  138  0B3A               	goto	u151
   275  139  0B3B               	goto	u150
   276  13A                     u151:
   277  13A  0B17               	goto	l686
   278  13B                     u150:
   279  13B  0B58               	goto	l716
   280  13C                     l702:
   281                           
   282                           ;newmain.c: 122:       x --;
   283  13C  0C01               	movlw	1
   284  13D  002A               	movwf	btemp
   285  13E  006B               	clrf	btemp+1
   286  13F  020A               	movf	wtemp0,w
   287  140  00B4               	subwf	_x,f
   288  141  020B               	movf	wtemp0+1,w
   289  142  0703               	skipc
   290  143  00F5               	decf	_x+1,f
   291  144  00B5               	subwf	_x+1,f
   292  145                     l704:
   293                           
   294                           ;newmain.c: 123:       GPIO = 0b00100000;
   295  145  0C20               	movlw	32
   296  146  0026               	movwf	6	;volatile
   297  147                     l706:
   298                           
   299                           ;newmain.c: 124:       GPIO = 0b00010000;
   300  147  0C10               	movlw	16
   301  148  0026               	movwf	6	;volatile
   302  149                     l708:
   303                           
   304                           ;newmain.c: 125:       _delay((unsigned long)((2)*(8000000/4000000.0)));
   305  149  0B4A               	nop2	;2 cycle nop
   306  14A  0B4B               	nop2	;2 cycle nop
   307  14B                     l710:
   308                           
   309                           ;newmain.c: 126:       GPIO = 0b00100000;
   310  14B  0C20               	movlw	32
   311  14C  04A4               	bcf	4,5	;FSR5=0, select bank0
   312  14D  0026               	movwf	6	;volatile
   313  14E                     l712:
   314                           
   315                           ;newmain.c: 127:        if (x == 0) {
   316  14E  0214               	movf	_x,w
   317  14F  0115               	iorwf	_x+1,w
   318  150  0743               	btfss	3,2
   319  151  0B53               	goto	u161
   320  152  0B54               	goto	u160
   321  153                     u161:
   322  153  0B58               	goto	l716
   323  154                     u160:
   324  154                     l714:
   325                           
   326                           ;newmain.c: 128:             clock_out = 2;
   327  154  0C02               	movlw	2
   328  155  0030               	movwf	_clock_out
   329  156  0C00               	movlw	0
   330  157  0031               	movwf	_clock_out+1
   331  158                     l716:
   332                           
   333                           ;newmain.c: 121:        while (clock_out == 1){
   334  158  00D0               	decf	_clock_out,w
   335  159  0111               	iorwf	_clock_out+1,w
   336  15A  0643               	btfsc	3,2
   337  15B  0B5D               	goto	u171
   338  15C  0B5E               	goto	u170
   339  15D                     u171:
   340  15D  0B3C               	goto	l702
   341  15E                     u170:
   342  15E  0B7F               	goto	l732
   343  15F                     l718:
   344                           
   345                           ;newmain.c: 133:       x ++;
   346  15F  0C01               	movlw	1
   347  160  002A               	movwf	btemp
   348  161  006B               	clrf	btemp+1
   349  162  020A               	movf	wtemp0,w
   350  163  01F4               	addwf	_x,f
   351  164  0603               	skipnc
   352  165  02B5               	incf	_x+1,f
   353  166  020B               	movf	wtemp0+1,w
   354  167  01F5               	addwf	_x+1,f
   355  168                     l720:
   356                           
   357                           ;newmain.c: 134:       GPIO = 0b00100000;
   358  168  0C20               	movlw	32
   359  169  0026               	movwf	6	;volatile
   360  16A                     l722:
   361                           
   362                           ;newmain.c: 135:       GPIO = 0b00010000;
   363  16A  0C10               	movlw	16
   364  16B  0026               	movwf	6	;volatile
   365  16C                     l724:
   366                           
   367                           ;newmain.c: 136:       _delay((unsigned long)((3)*(8000000/4000000.0)));
   368  16C  0B6D               	nop2	;2 cycle nop
   369  16D  0B6E               	nop2	;2 cycle nop
   370  16E  0B6F               	nop2	;2 cycle nop
   371  16F                     l726:
   372                           
   373                           ;newmain.c: 137:       GPIO = 0b00100000;
   374  16F  0C20               	movlw	32
   375  170  04A4               	bcf	4,5	;FSR5=0, select bank0
   376  171  0026               	movwf	6	;volatile
   377  172                     l728:
   378                           
   379                           ;newmain.c: 138:        if (x >= 65500) {
   380  172  0CFF               	movlw	255
   381  173  0095               	subwf	_x+1,w
   382  174  0CDC               	movlw	220
   383  175  0643               	skipnz
   384  176  0094               	subwf	_x,w
   385  177  0703               	skipc
   386  178  0B7A               	goto	u181
   387  179  0B7B               	goto	u180
   388  17A                     u181:
   389  17A  0B7F               	goto	l732
   390  17B                     u180:
   391  17B                     l730:
   392                           
   393                           ;newmain.c: 139:             clock_out = 3;
   394  17B  0C03               	movlw	3
   395  17C  0030               	movwf	_clock_out
   396  17D  0C00               	movlw	0
   397  17E  0031               	movwf	_clock_out+1
   398  17F                     l732:
   399                           
   400                           ;newmain.c: 132:        while (clock_out == 2){
   401  17F  0C02               	movlw	2
   402  180  0190               	xorwf	_clock_out,w
   403  181  0111               	iorwf	_clock_out+1,w
   404  182  0643               	btfsc	3,2
   405  183  0B85               	goto	u191
   406  184  0B86               	goto	u190
   407  185                     u191:
   408  185  0B5F               	goto	l718
   409  186                     u190:
   410  186  0BA5               	goto	l748
   411  187                     l734:
   412                           
   413                           ;newmain.c: 144:       x --;
   414  187  0C01               	movlw	1
   415  188  002A               	movwf	btemp
   416  189  006B               	clrf	btemp+1
   417  18A  020A               	movf	wtemp0,w
   418  18B  00B4               	subwf	_x,f
   419  18C  020B               	movf	wtemp0+1,w
   420  18D  0703               	skipc
   421  18E  00F5               	decf	_x+1,f
   422  18F  00B5               	subwf	_x+1,f
   423  190                     l736:
   424                           
   425                           ;newmain.c: 145:       GPIO = 0b00100000;
   426  190  0C20               	movlw	32
   427  191  0026               	movwf	6	;volatile
   428  192                     l738:
   429                           
   430                           ;newmain.c: 146:       GPIO = 0b00010000;
   431  192  0C10               	movlw	16
   432  193  0026               	movwf	6	;volatile
   433  194                     l740:
   434                           
   435                           ;newmain.c: 147:       _delay((unsigned long)((4)*(8000000/4000000.0)));
   436  194  0B95               	nop2	;2 cycle nop
   437  195  0B96               	nop2	;2 cycle nop
   438  196  0B97               	nop2	;2 cycle nop
   439  197  0B98               	nop2	;2 cycle nop
   440  198                     l742:
   441                           
   442                           ;newmain.c: 148:       GPIO = 0b00100000;
   443  198  0C20               	movlw	32
   444  199  04A4               	bcf	4,5	;FSR5=0, select bank0
   445  19A  0026               	movwf	6	;volatile
   446  19B                     l744:
   447                           
   448                           ;newmain.c: 149:        if (x == 0) {
   449  19B  0214               	movf	_x,w
   450  19C  0115               	iorwf	_x+1,w
   451  19D  0743               	btfss	3,2
   452  19E  0BA0               	goto	u201
   453  19F  0BA1               	goto	u200
   454  1A0                     u201:
   455  1A0  0BA5               	goto	l748
   456  1A1                     u200:
   457  1A1                     l746:
   458                           
   459                           ;newmain.c: 150:             clock_out = 4;
   460  1A1  0C04               	movlw	4
   461  1A2  0030               	movwf	_clock_out
   462  1A3  0C00               	movlw	0
   463  1A4  0031               	movwf	_clock_out+1
   464  1A5                     l748:
   465                           
   466                           ;newmain.c: 143:        while (clock_out == 3){
   467  1A5  0C03               	movlw	3
   468  1A6  0190               	xorwf	_clock_out,w
   469  1A7  0111               	iorwf	_clock_out+1,w
   470  1A8  0643               	btfsc	3,2
   471  1A9  0BAB               	goto	u211
   472  1AA  0BAC               	goto	u210
   473  1AB                     u211:
   474  1AB  0B87               	goto	l734
   475  1AC                     u210:
   476  1AC  0BD0               	goto	l764
   477  1AD                     l750:
   478                           
   479                           ;newmain.c: 155:       x ++;
   480  1AD  0C01               	movlw	1
   481  1AE  002A               	movwf	btemp
   482  1AF  006B               	clrf	btemp+1
   483  1B0  020A               	movf	wtemp0,w
   484  1B1  01F4               	addwf	_x,f
   485  1B2  0603               	skipnc
   486  1B3  02B5               	incf	_x+1,f
   487  1B4  020B               	movf	wtemp0+1,w
   488  1B5  01F5               	addwf	_x+1,f
   489  1B6                     l752:
   490                           
   491                           ;newmain.c: 156:       GPIO = 0b00100000;
   492  1B6  0C20               	movlw	32
   493  1B7  0026               	movwf	6	;volatile
   494  1B8                     l754:
   495                           
   496                           ;newmain.c: 157:       GPIO = 0b00010000;
   497  1B8  0C10               	movlw	16
   498  1B9  0026               	movwf	6	;volatile
   499  1BA                     l756:
   500                           
   501                           ;newmain.c: 158:       _delay((unsigned long)((50)*(8000000/4000000.0)));
   502  1BA  0C20               	movlw	32
   503  1BB  04A4               	bcf	4,5	;FSR5=0, select bank0
   504  1BC  003E               	movwf	??_main
   505  1BD                     u267:
   506  1BD  02FE               	decfsz	??_main,f
   507  1BE  0BBD               	goto	u267
   508  1BF  0BC0               	nop2
   509  1C0                     l758:
   510                           
   511                           ;newmain.c: 159:       GPIO = 0b00100000;
   512  1C0  0C20               	movlw	32
   513  1C1  04A4               	bcf	4,5	;FSR5=0, select bank0
   514  1C2  0026               	movwf	6	;volatile
   515  1C3                     l760:
   516                           
   517                           ;newmain.c: 160:        if (x >= 65500) {
   518  1C3  0CFF               	movlw	255
   519  1C4  0095               	subwf	_x+1,w
   520  1C5  0CDC               	movlw	220
   521  1C6  0643               	skipnz
   522  1C7  0094               	subwf	_x,w
   523  1C8  0703               	skipc
   524  1C9  0BCB               	goto	u221
   525  1CA  0BCC               	goto	u220
   526  1CB                     u221:
   527  1CB  0BD0               	goto	l764
   528  1CC                     u220:
   529  1CC                     l762:
   530                           
   531                           ;newmain.c: 161:             clock_out = 5;
   532  1CC  0C05               	movlw	5
   533  1CD  0030               	movwf	_clock_out
   534  1CE  0C00               	movlw	0
   535  1CF  0031               	movwf	_clock_out+1
   536  1D0                     l764:
   537                           
   538                           ;newmain.c: 154:        while (clock_out == 4){
   539  1D0  0C04               	movlw	4
   540  1D1  0190               	xorwf	_clock_out,w
   541  1D2  0111               	iorwf	_clock_out+1,w
   542  1D3  0643               	btfsc	3,2
   543  1D4  0BD6               	goto	u231
   544  1D5  0BD7               	goto	u230
   545  1D6                     u231:
   546  1D6  0BAD               	goto	l750
   547  1D7                     u230:
   548  1D7  0BF6               	goto	l780
   549  1D8                     l766:
   550                           
   551                           ;newmain.c: 166:       x --;
   552  1D8  0C01               	movlw	1
   553  1D9  002A               	movwf	btemp
   554  1DA  006B               	clrf	btemp+1
   555  1DB  020A               	movf	wtemp0,w
   556  1DC  00B4               	subwf	_x,f
   557  1DD  020B               	movf	wtemp0+1,w
   558  1DE  0703               	skipc
   559  1DF  00F5               	decf	_x+1,f
   560  1E0  00B5               	subwf	_x+1,f
   561  1E1                     l768:
   562                           
   563                           ;newmain.c: 167:       GPIO = 0b00100000;
   564  1E1  0C20               	movlw	32
   565  1E2  0026               	movwf	6	;volatile
   566  1E3                     l770:
   567                           
   568                           ;newmain.c: 168:       GPIO = 0b00010000;
   569  1E3  0C10               	movlw	16
   570  1E4  0026               	movwf	6	;volatile
   571  1E5                     l772:
   572                           
   573                           ;newmain.c: 169:       _delay((unsigned long)((120)*(8000000/4000000.0)));
   574  1E5  0C4F               	movlw	79
   575  1E6  04A4               	bcf	4,5	;FSR5=0, select bank0
   576  1E7  003E               	movwf	??_main
   577  1E8                     u277:
   578  1E8  02FE               	decfsz	??_main,f
   579  1E9  0BE8               	goto	u277
   580  1EA  0000               	nop
   581  1EB                     l774:
   582                           
   583                           ;newmain.c: 170:       GPIO = 0b00100000;
   584  1EB  0C20               	movlw	32
   585  1EC  04A4               	bcf	4,5	;FSR5=0, select bank0
   586  1ED  0026               	movwf	6	;volatile
   587  1EE                     l776:
   588                           
   589                           ;newmain.c: 171:        if (x == 0) {
   590  1EE  0214               	movf	_x,w
   591  1EF  0115               	iorwf	_x+1,w
   592  1F0  0743               	btfss	3,2
   593  1F1  0BF3               	goto	u241
   594  1F2  0BF4               	goto	u240
   595  1F3                     u241:
   596  1F3  0BF6               	goto	l780
   597  1F4                     u240:
   598  1F4                     l778:
   599                           
   600                           ;newmain.c: 172:             clock_out = 0;
   601  1F4  0070               	clrf	_clock_out
   602  1F5  0071               	clrf	_clock_out+1
   603  1F6                     l780:
   604                           
   605                           ;newmain.c: 165:        while (clock_out == 5){
   606  1F6  0C05               	movlw	5
   607  1F7  0190               	xorwf	_clock_out,w
   608  1F8  0111               	iorwf	_clock_out+1,w
   609  1F9  0643               	btfsc	3,2
   610  1FA  0BFC               	goto	u251
   611  1FB  0BFD               	goto	u250
   612  1FC                     u251:
   613  1FC  0BD8               	goto	l766
   614  1FD                     u250:
   615  1FD  0B35               	goto	l700
   616  1FE  04A3  0A00         	ljmp	start
   617  200                     __end_of_main:
   618  000A                     btemp	set	10	;btemp
   619  000A                     wtemp0	set	10
   620  000C                     wtemp1	set	12
   621  000E                     wtemp2	set	14
   622  000A                     ttemp0	set	10
   623  000D                     ttemp1	set	13
   624  000A                     ltemp0	set	10
   625  000C                     ltemp3	set	12
   626                           
   627                           	psect	config
   628                           
   629                           ;Config register CONFIG @ 0xFFF
   630                           ;	Oscillator Select
   631                           ;	OSC = IntRC, INTOSC with 1.125 ms DRT
   632                           ;	Watchdog Timer Enable bit
   633                           ;	WDT = OFF, WDT disabled
   634                           ;	Code Protect
   635                           ;	CP = OFF, Code protection off
   636                           ;	Master Clear Enable bit
   637                           ;	MCLRE = ON, GP3/MCLR Functions as MCLR
   638                           ;	Internal Oscillator Frequency Select bit
   639                           ;	IOSCFS = ON, 8 MHz INTOSC Speed
   640  0FFF                     	org	4095
   641  0FFF  0FFA               	dw	4090

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            16      1      15
    BANK1            16      0       4

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            10      0       0       3        0.0%
BANK0               10      1       F       4       93.8%
BITBANK1            10      0       0       5        0.0%
BANK1               10      0       4       6       25.0%
ABS                  0      0      13       7        0.0%
DATA                 0      0      13       8        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 02 20:04:22 2024

                      _p 0012                        _t 0032                        _x 0014  
                      _y 001A                       fsr 0004                      l700 0135  
                    l710 014B                      l702 013C                      l720 0168  
                    l712 014E                      l704 0145                      l730 017B  
                    l722 016A                      l714 0154                      l706 0147  
                    l740 0194                      l724 016C                      l732 017F  
                    l708 0149                      l716 0158                      l750 01AD  
                    l742 0198                      l734 0187                      l726 016F  
                    l718 015F                      l760 01C3                      l752 01B6  
                    l744 019B                      l736 0190                      l728 0172  
                    l680 0111                      l770 01E3                      l762 01CC  
                    l754 01B8                      l746 01A1                      l738 0192  
                    l690 0122                      l682 0113                      l772 01E5  
                    l780 01F6                      l756 01BA                      l764 01D0  
                    l748 01A5                      l692 0124                      l684 0115  
                    l774 01EB                      l766 01D8                      l758 01C0  
                    l694 0125                      l686 0117                      l776 01EE  
                    l768 01E1                      l696 0128                      l688 0120  
                    l778 01F4                      l698 0131                      u200 01A1  
                    u201 01A0                      u210 01AC                      u211 01AB  
                    u220 01CC                      u140 0131                      u221 01CB  
                    u141 0130                      u230 01D7                      u150 013B  
                    u231 01D6                      u151 013A                      u240 01F4  
                    u160 0154                      u241 01F3                      u161 0153  
                    u250 01FD                      u170 015E                      u251 01FC  
                    u171 015D                      u180 017B                      u181 017A  
                    u190 0186                      u191 0185                      u267 01BD  
                    u277 01E8                      indf 0000                     _GPIO 0006  
                   _TMR0 0001                     _main 0111                     btemp 000A  
                   start 0000                    ?_main 001E                    _clock 0018  
                  ltemp0 000A                    ltemp3 000C                    ttemp0 000A  
                  ttemp1 000D                    status 0003                    wtemp0 000A  
                  wtemp1 000C                    wtemp2 000E          __initialization 0002  
           __end_of_main 0200                   ??_main 001E                   _clock2 001C  
                 _clock3 0016  __end_of__initialization 001E             __pidataBANK0 002A  
             __pbssBANK0 0010               __pbssBANK1 0030               __pmaintext 0111  
                clrloop0 0022     end_of_initialization 001E      start_initialization 0002  
            __pdataBANK0 001A                ___latbits 0001            __pcstackBANK0 001E  
              _clock_out 0010              _clock_out_2 0030                clear_ram0 0021  
               _TRISGPIO 0006            __size_of_main 00EF  
