

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 27 20:38:37 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12F510
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=ENTRY,delta=2
     5                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=ENTRY,delta=2
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0xA,6
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 29/04/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F510 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59                           
    60                           	psect	idataBANK0
    61  02A                     __pidataBANK0:
    62                           
    63                           ;initializer for _y
    64  02A  0801               	retlw	1
    65  02B  0800               	retlw	0
    66                           
    67                           ;initializer for _clock2
    68  02C  0809               	retlw	9
    69  02D  0800               	retlw	0
    70  0001                     _TMR0	set	1
    71  0006                     _TRISGPIO	set	6
    72  0006                     _GPIO	set	6
    73                           
    74                           	psect	cinit
    75  002                     start_initialization:	
    76                           ; #config settings
    77                           
    78  002                     __initialization:
    79                           
    80                           ; Initialize objects allocated to BANK0
    81  002  04A3  092A  04A3   	fcall	__pidataBANK0	;fetch initializer
    82  005  003A               	movwf	__pdataBANK0& (0+31)
    83  006  04A3  092B  04A3   	fcall	__pidataBANK0+1	;fetch initializer
    84  009  003B               	movwf	(__pdataBANK0+1)& (0+31)
    85  00A  04A3  092C  04A3   	fcall	__pidataBANK0+2	;fetch initializer
    86  00D  003C               	movwf	(__pdataBANK0+2)& (0+31)
    87  00E  04A3  092D  04A3   	fcall	__pidataBANK0+3	;fetch initializer
    88  011  003D               	movwf	(__pdataBANK0+3)& (0+31)
    89                           
    90                           ; Clear objects allocated to BANK0
    91  012  0C10               	movlw	__pbssBANK0
    92  013  0024               	movwf	4
    93  014  0C1A               	movlw	(__pbssBANK0+10)& (0+255)
    94  015  04A3  0921  04A3   	fcall	clear_ram0
    95                           
    96                           ; Clear objects allocated to BANK1
    97  018  0C30               	movlw	__pbssBANK1
    98  019  0024               	movwf	4
    99  01A  0C34               	movlw	(__pbssBANK1+4)& (0+255)
   100  01B  04A3  0921  04A3   	fcall	clear_ram0
   101  01E                     end_of_initialization:	
   102                           ;End of C runtime variable initialization code
   103                           
   104  01E                     __end_of__initialization:
   105  01E  0064               	clrf	4
   106  01F  04A3  0BAB         	ljmp	_main	;jump to C main() function
   107                           
   108                           	psect	bssBANK0
   109  010                     __pbssBANK0:
   110  010                     _clock_out:
   111  010                     	ds	2
   112  012                     _p:
   113  012                     	ds	2
   114  014                     _x:
   115  014                     	ds	2
   116  016                     _clock3:
   117  016                     	ds	2
   118  018                     _clock:
   119  018                     	ds	2
   120                           
   121                           	psect	dataBANK0
   122  01A                     __pdataBANK0:
   123  01A                     _y:
   124  01A                     	ds	2
   125  01C                     _clock2:
   126  01C                     	ds	2
   127                           
   128                           	psect	bssBANK1
   129  030                     __pbssBANK1:
   130  030                     _clock_out_2:
   131  030                     	ds	2
   132  032                     _t:
   133  032                     	ds	2
   134                           
   135                           	psect	clrtext
   136  021                     clear_ram0:	
   137                           ;	Called with FSR containing the base address, and
   138                           ;	W with the last address+1
   139                           
   140  021  0004               	clrwdt	;clear the watchdog before getting into this loop
   141  022                     clrloop0:
   142  022  0060               	clrf	0	;clear RAM location pointed to by FSR
   143  023  02A4               	incf	4,f	;increment pointer
   144  024  0184               	xorwf	4,w	;XOR with final address
   145  025  0E1F               	andlw	31	;Test low bits only
   146  026  0643               	btfsc	3,2	;have we reached the end yet?
   147  027  0800               	retlw	0	;all done for this memory range, return
   148  028  0184               	xorwf	4,w	;XOR again to restore value
   149  029  0A22               	goto	clrloop0	;do the next byte
   150                           
   151                           	psect	cstackBANK0
   152  01E                     __pcstackBANK0:
   153  01E                     ?_main:
   154  01E                     ??_main:	
   155                           ; 1 bytes @ 0x0
   156                           
   157                           
   158                           ; 1 bytes @ 0x0
   159  01E                     	ds	1
   160                           
   161                           	psect	maintext
   162  1AB                     __pmaintext:	
   163 ;;
   164 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   165 ;;
   166 ;; *************** function _main *****************
   167 ;; Defined at:
   168 ;;		line 38 in file "newmain.c"
   169 ;; Parameters:    Size  Location     Type
   170 ;;		None
   171 ;; Auto vars:     Size  Location     Type
   172 ;;		None
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1   36[None  ] void 
   175 ;; Registers used:
   176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1
   177 ;; Tracked objects:
   178 ;;		On entry : B00/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMMON   BANK0   BANK1
   182 ;;      Params:         0       0       0
   183 ;;      Locals:         0       0       0
   184 ;;      Temps:          0       1       0
   185 ;;      Totals:         0       1       0
   186 ;;Total ram usage:        1 bytes
   187 ;; This function calls:
   188 ;;		Nothing
   189 ;; This function is called by:
   190 ;;		Startup code after reset
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           
   195                           ;psect for function _main
   196  1AB                     _main:
   197  1AB                     l596:	
   198                           ;incstack = 0
   199                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+1]
   200                           
   201                           
   202                           ;newmain.c: 39:    GPIO = 0b00000000;
   203  1AB  04A4               	bcf	4,5	;FSR5=0, select bank0
   204  1AC  0066               	clrf	6	;volatile
   205  1AD                     l598:
   206                           
   207                           ;newmain.c: 40:    TRISGPIO = 0b00000000;
   208  1AD  0C00               	movlw	0
   209  1AE  0006               	tris	6
   210  1AF                     l600:
   211                           
   212                           ;newmain.c: 41:    TMR0 = 0;
   213  1AF  0061               	clrf	1	;volatile
   214  1B0                     l602:
   215                           
   216                           ;newmain.c: 110:        if (clock_out == 0){
   217  1B0  0210               	movf	_clock_out,w
   218  1B1  0111               	iorwf	_clock_out+1,w
   219  1B2  0743               	btfss	3,2
   220  1B3  0BB5               	goto	u61
   221  1B4  0BB6               	goto	u60
   222  1B5                     u61:
   223  1B5  0BD8               	goto	l618
   224  1B6                     u60:
   225  1B6                     l604:
   226                           
   227                           ;newmain.c: 111:       x ++;
   228  1B6  0C01               	movlw	1
   229  1B7  002A               	movwf	btemp
   230  1B8  006B               	clrf	btemp+1
   231  1B9  020A               	movf	wtemp0,w
   232  1BA  01F4               	addwf	_x,f
   233  1BB  0603               	skipnc
   234  1BC  02B5               	incf	_x+1,f
   235  1BD  020B               	movf	wtemp0+1,w
   236  1BE  01F5               	addwf	_x+1,f
   237  1BF                     l606:
   238                           
   239                           ;newmain.c: 112:       GPIO = 0b00100000;
   240  1BF  0C20               	movlw	32
   241  1C0  0026               	movwf	6	;volatile
   242  1C1                     l608:
   243                           
   244                           ;newmain.c: 113:       GPIO = 0b00010000;
   245  1C1  0C10               	movlw	16
   246  1C2  0026               	movwf	6	;volatile
   247  1C3                     l610:
   248                           
   249                           ;newmain.c: 114:       _delay((unsigned long)((10)*(8000000/4000000.0)));
   250  1C3  0C06               	movlw	6
   251  1C4  04A4               	bcf	4,5	;FSR5=0, select bank0
   252  1C5  003E               	movwf	??_main
   253  1C6                     u107:
   254  1C6  02FE               	decfsz	??_main,f
   255  1C7  0BC6               	goto	u107
   256  1C8                     l612:
   257                           
   258                           ;newmain.c: 115:       GPIO = 0b00100000;
   259  1C8  0C20               	movlw	32
   260  1C9  04A4               	bcf	4,5	;FSR5=0, select bank0
   261  1CA  0026               	movwf	6	;volatile
   262  1CB                     l614:
   263                           
   264                           ;newmain.c: 116:        if (x >= 65500) {
   265  1CB  0CFF               	movlw	255
   266  1CC  0095               	subwf	_x+1,w
   267  1CD  0CDC               	movlw	220
   268  1CE  0643               	skipnz
   269  1CF  0094               	subwf	_x,w
   270  1D0  0703               	skipc
   271  1D1  0BD3               	goto	u71
   272  1D2  0BD4               	goto	u70
   273  1D3                     u71:
   274  1D3  0BD8               	goto	l618
   275  1D4                     u70:
   276  1D4                     l616:
   277                           
   278                           ;newmain.c: 117:             clock_out = 10;
   279  1D4  0C0A               	movlw	10
   280  1D5  0030               	movwf	_clock_out
   281  1D6  0C00               	movlw	0
   282  1D7  0031               	movwf	_clock_out+1
   283  1D8                     l618:
   284                           
   285                           ;newmain.c: 121:        if (clock_out == 10){
   286  1D8  0C0A               	movlw	10
   287  1D9  0190               	xorwf	_clock_out,w
   288  1DA  0111               	iorwf	_clock_out+1,w
   289  1DB  0743               	btfss	3,2
   290  1DC  0BDE               	goto	u81
   291  1DD  0BDF               	goto	u80
   292  1DE                     u81:
   293  1DE  0BB0               	goto	l602
   294  1DF                     u80:
   295  1DF                     l620:
   296                           
   297                           ;newmain.c: 122:       x --;
   298  1DF  0C01               	movlw	1
   299  1E0  002A               	movwf	btemp
   300  1E1  006B               	clrf	btemp+1
   301  1E2  020A               	movf	wtemp0,w
   302  1E3  00B4               	subwf	_x,f
   303  1E4  020B               	movf	wtemp0+1,w
   304  1E5  0703               	skipc
   305  1E6  00F5               	decf	_x+1,f
   306  1E7  00B5               	subwf	_x+1,f
   307  1E8                     l622:
   308                           
   309                           ;newmain.c: 123:       GPIO = 0b00100000;
   310  1E8  0C20               	movlw	32
   311  1E9  0026               	movwf	6	;volatile
   312  1EA                     l624:
   313                           
   314                           ;newmain.c: 124:       GPIO = 0b00010000;
   315  1EA  0C10               	movlw	16
   316  1EB  0026               	movwf	6	;volatile
   317  1EC                     l626:
   318                           
   319                           ;newmain.c: 125:       _delay((unsigned long)((12)*(8000000/4000000.0)));
   320  1EC  0C07               	movlw	7
   321  1ED  04A4               	bcf	4,5	;FSR5=0, select bank0
   322  1EE  003E               	movwf	??_main
   323  1EF                     u117:
   324  1EF  02FE               	decfsz	??_main,f
   325  1F0  0BEF               	goto	u117
   326  1F1  0000               	nop
   327  1F2                     l628:
   328                           
   329                           ;newmain.c: 126:       GPIO = 0b00100000;
   330  1F2  0C20               	movlw	32
   331  1F3  04A4               	bcf	4,5	;FSR5=0, select bank0
   332  1F4  0026               	movwf	6	;volatile
   333  1F5                     l630:
   334                           
   335                           ;newmain.c: 127:        if (x == 0) {
   336  1F5  0214               	movf	_x,w
   337  1F6  0115               	iorwf	_x+1,w
   338  1F7  0743               	btfss	3,2
   339  1F8  0BFA               	goto	u91
   340  1F9  0BFB               	goto	u90
   341  1FA                     u91:
   342  1FA  0BB0               	goto	l602
   343  1FB                     u90:
   344  1FB                     l632:
   345                           
   346                           ;newmain.c: 128:             clock_out = 0;
   347  1FB  0070               	clrf	_clock_out
   348  1FC  0071               	clrf	_clock_out+1
   349  1FD  0BB0               	goto	l602
   350  1FE  04A3  0A00         	ljmp	start
   351  200                     __end_of_main:
   352  000A                     btemp	set	10	;btemp
   353  000A                     wtemp0	set	10
   354  000C                     wtemp1	set	12
   355  000E                     wtemp2	set	14
   356  000A                     ttemp0	set	10
   357  000D                     ttemp1	set	13
   358  000A                     ltemp0	set	10
   359  000C                     ltemp3	set	12
   360                           
   361                           	psect	config
   362                           
   363                           ;Config register CONFIG @ 0xFFF
   364                           ;	Oscillator Select
   365                           ;	OSC = IntRC, INTOSC with 1.125 ms DRT
   366                           ;	Watchdog Timer Enable bit
   367                           ;	WDT = OFF, WDT disabled
   368                           ;	Code Protect
   369                           ;	CP = OFF, Code protection off
   370                           ;	Master Clear Enable bit
   371                           ;	MCLRE = ON, GP3/MCLR Functions as MCLR
   372                           ;	Internal Oscillator Frequency Select bit
   373                           ;	IOSCFS = ON, 8 MHz INTOSC Speed
   374  0FFF                     	org	4095
   375  0FFF  0FFA               	dw	4090

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            16      1      15
    BANK1            16      0       4

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            10      0       0       3        0.0%
BANK0               10      1       F       4       93.8%
BITBANK1            10      0       0       5        0.0%
BANK1               10      0       4       6       25.0%
ABS                  0      0      13       7        0.0%
DATA                 0      0      13       8        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 27 20:38:37 2024

                      _p 0012                        _t 0032                        _x 0014  
                      _y 001A                       u60 01B6                       u61 01B5  
                     u70 01D4                       u71 01D3                       u80 01DF  
                     u81 01DE                       u90 01FB                       u91 01FA  
                     fsr 0004                      l600 01AF                      l610 01C3  
                    l602 01B0                      l620 01DF                      l612 01C8  
                    l604 01B6                      l630 01F5                      l622 01E8  
                    l614 01CB                      l606 01BF                      l632 01FB  
                    l624 01EA                      l616 01D4                      l608 01C1  
                    l626 01EC                      l618 01D8                      l628 01F2  
                    l596 01AB                      l598 01AD                      u107 01C6  
                    u117 01EF                      indf 0000                     _GPIO 0006  
                   _TMR0 0001                     _main 01AB                     btemp 000A  
                   start 0000                    ?_main 001E                    _clock 0018  
                  ltemp0 000A                    ltemp3 000C                    ttemp0 000A  
                  ttemp1 000D                    status 0003                    wtemp0 000A  
                  wtemp1 000C                    wtemp2 000E          __initialization 0002  
           __end_of_main 0200                   ??_main 001E                   _clock2 001C  
                 _clock3 0016  __end_of__initialization 001E             __pidataBANK0 002A  
             __pbssBANK0 0010               __pbssBANK1 0030               __pmaintext 01AB  
                clrloop0 0022     end_of_initialization 001E      start_initialization 0002  
            __pdataBANK0 001A                ___latbits 0001            __pcstackBANK0 001E  
              _clock_out 0010              _clock_out_2 0030                clear_ram0 0021  
               _TRISGPIO 0006            __size_of_main 0055  
